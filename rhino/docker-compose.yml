version: '3'
services:
  rhino1:
    image: cts/mswrhino:3.0.0.19
    build:
      context: ./
    volumes:
      - ./logs1:/opt/opencloud/rhino/node/work/log
      - ${PWD}/example/rhino1_config_variables:/opt/opencloud/rhino/node/config/config_variables
      - ${PWD}/certs/rhino-server.keystore:/opt/opencloud/rhino/rhino-server.keystore
      - ${PWD}/certs/rhino-client.keystore:/opt/opencloud/rhino/rhino-client.keystore
      - ${PWD}/certs/rhino-client.keystore:/opt/opencloud/rhino/client/rhino-client.keystore
    hostname: rhino1
    container_name: rhino1
    environment:
      - RHINO_START_ARGUMENTS=-k -l -s -p
    depends_on:
      - rhino-init
    ports:
      - "1199:1199"
  rhino2:
    image: cts/mswrhino:3.0.0.19
    build:
      context: ./
    volumes:
      - ${PWD}/logs2:/opt/opencloud/rhino/node/work/log
      - ${PWD}/example/rhino2_config_variables:/opt/opencloud/rhino/node/config/config_variables
      - ${PWD}/certs/rhino-server.keystore:/opt/opencloud/rhino/rhino-server.keystore
      - ${PWD}/certs/rhino-client.keystore:/opt/opencloud/rhino/rhino-client.keystore
      - ${PWD}/certs/rhino-client.keystore:/opt/opencloud/rhino/client/rhino-client.keystore
    hostname: rhino2
    container_name: rhino2
    environment:
      - RHINO_START_ARGUMENTS=-k -l -s
    depends_on:
      - rhino-init
    ports:
      - "1299:1299"
  rhino-init:
    image: cts/mswrhino:3.0.0.19
    volumes:
      - ${PWD}/example/rhino1_config_variables:/opt/opencloud/rhino/node/config/config_variables
    hostname: rhino-init
    container_name: rhino-init
    entrypoint: /opt/opencloud/rhino/node/init-management-db.sh -v
    depends_on:
      - postgres
  postgres:
    image: "postgres"
    hostname: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: rhino
      POSTGRES_DB: rhino
    ports:
      - "5432:5432"
    volumes:
      - database-data:/var/lib/postgresql/data/
volumes:
  database-data: # named volumes can be managed easier using docker-compose

